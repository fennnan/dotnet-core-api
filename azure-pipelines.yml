# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master

variables:
  azureSubscription: 'AdevintaHunters PoC Service Auth'
  BuildConfiguration: Release

  # Function app name
  webAppName: 'wa-sre--techtest-poc'

  # Working Directory
  workingDirectory: '$(System.DefaultWorkingDirectory)'
  workingTestDirectory : '$(System.DefaultWorkingDirectory)'
  vmImageName : 'windows-latest'

stages:
- stage: Build
  displayName: Build stage

  jobs:
  - job: Build
    displayName: Build
    pool:
      vmImage: $(vmImageName)

    steps:
    - task: DotNetCoreCLI@2
      displayName: Restore Nuget
      inputs:
        command: 'restore'
        projects: |
          $(workingDirectory)/*.csproj
    - task: DotNetCoreCLI@2
      displayName: Build
      inputs:
        command: 'build'
        projects: |
          $(workingDirectory)/*.csproj
        arguments: --configuration $(BuildConfiguration)
    - task: DotNetCoreCLI@2
      displayName: Publish
      inputs:
        command: publish
        publishWebProjects: true
        arguments: --output $(Build.ArtifactStagingDirectory) --configuration $(BuildConfiguration)
        zipAfterPublish: True

    - publish: $(Build.ArtifactStagingDirectory)
      artifact: drop

- stage: Deployhunter
  displayName: 'hunter Stage'
  dependsOn: Build
  condition: succeeded()

  jobs:
  - deployment: Deploy
    displayName: Deploy
    environment: 'hunter'
    pool:
      vmImage: $(vmImageName)

    strategy:
      runOnce:
        deploy:

          steps:
          - task: AzureRmWebAppDeployment@4
            inputs:
              ConnectionType: 'AzureRM'
              azureSubscription: 'AdevintaHunters PoC Service Auth'
              appType: 'webApp'
              WebAppName: 'wa-sre--techtest-poc'
              packageForLinux: '$(Pipeline.Workspace)/drop/$(Build.BuildId).zip'
              enableCustomDeployment: true
              DeploymentType: 'webDeploy'
          